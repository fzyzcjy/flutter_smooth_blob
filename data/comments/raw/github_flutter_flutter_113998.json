{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 113998}, "content": {"author": {"login": "fzyzcjy"}, "body": "Close https://github.com/flutter/flutter/issues/113995\r\nPlease see the issue for a bug reproduction. Here I will discuss how it is solved and what caused it.\r\n\r\n### The real world bug\r\n\r\nMy app has a part of it not rendered (i.e. page blank) sometimes, which is very weird. After I manage to reproduce it in debug environment, the error is:\r\n\r\n<details>\r\n\r\n```\r\n======== Exception caught by scheduler library =====================================================\r\nThe following assertion was thrown during a scheduler callback:\r\nLayer ClipRectEngineLayer was previously used as oldLayer.\r\nOnce a layer is used as oldLayer, it may not be used again. Instead, after calling one of the SceneBuilder.push* methods and passing an oldLayer to it, use the layer returned by the method as oldLayer in subsequent frames.\r\n'dart:ui/compositing.dart':\r\nFailed assertion: line 88 pos 9: '<optimized out>'\r\n\r\n\r\nEither the assertion indicates an error in the framework itself, or we should provide substantially more information in this error message to help you determine and fix the underlying cause.\r\nIn either case, please report this assertion by filing a bug on GitHub:\r\n  https://github.com/flutter/flutter/issues/new?template=2_bug.md\r\n\r\nWhen the exception was thrown, this was the stack: \r\n#2      _EngineLayerWrapper._debugCheckNotUsedAsOldLayer (dart:ui/compositing.dart:88:9)\r\n#3      SceneBuilder.addRetained.<anonymous closure>.recursivelyCheckChildrenUsedOnce (dart:ui/compositing.dart:656:21)\r\n#4      List.forEach (dart:core-patch/growable_array.dart:416:8)\r\n#5      SceneBuilder.addRetained.<anonymous closure>.recursivelyCheckChildrenUsedOnce (dart:ui/compositing.dart:662:18)\r\n#6      SceneBuilder.addRetained.<anonymous closure> (dart:ui/compositing.dart:665:7)\r\n#7      SceneBuilder.addRetained (dart:ui/compositing.dart:668:6)\r\n#8      Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:643:15)\r\n#9      ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#10     OffsetLayer.addToScene (package:flutter/src/rendering/layer.dart:1378:5)\r\n#11     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#12     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#13     OffsetLayer.addToScene (package:flutter/src/rendering/layer.dart:1378:5)\r\n#14     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#15     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#16     EnhancedLeaderLayer.addToScene (package:flutter_portal/src/enhanced_composited_transform/flutter_src/rendering_layer.dart:159:5)\r\n#17     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#18     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#19     EnhancedLeaderLayer.addToScene (package:flutter_portal/src/enhanced_composited_transform/flutter_src/rendering_layer.dart:159:5)\r\n#20     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#21     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#22     EnhancedLeaderLayer.addToScene (package:flutter_portal/src/enhanced_composited_transform/flutter_src/rendering_layer.dart:159:5)\r\n#23     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#24     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#25     EnhancedLeaderLayer.addToScene (package:flutter_portal/src/enhanced_composited_transform/flutter_src/rendering_layer.dart:159:5)\r\n#26     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#27     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#28     OffsetLayer.addToScene (package:flutter/src/rendering/layer.dart:1378:5)\r\n#29     Layer._addToSceneWithRetainedRendering (package:flutter/src/rendering/layer.dart:646:5)\r\n#30     ContainerLayer.addChildrenToScene (package:flutter/src/rendering/layer.dart:1241:13)\r\n#31     TransformLayer.addToScene (package:flutter/src/rendering/layer.dart:1834:5)\r\n#32     ContainerLayer.buildScene (package:flutter/src/rendering/layer.dart:1054:5)\r\n#33     RenderView.compositeFrame (package:flutter/src/rendering/view.dart:231:37)\r\n#34     RendererBinding.drawFrame (package:flutter/src/rendering/binding.dart:517:18)\r\n#35     WidgetsBinding.drawFrame (package:flutter/src/widgets/binding.dart:884:13)\r\n#36     RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:378:5)\r\n#37     SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1175:15)\r\n#38     SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1104:9)\r\n#39     SchedulerBinding._handleDrawFrame (package:flutter/src/scheduler/binding.dart:1015:5)\r\n#40     _invoke (dart:ui/hooks.dart:148:13)\r\n#41     PlatformDispatcher._drawFrame (dart:ui/platform_dispatcher.dart:318:5)\r\n#42     _drawFrame (dart:ui/hooks.dart:115:31)\r\n(elided 2 frames from class _AssertionError)\r\n====================================================================================================\r\n```\r\n\r\n</details>\r\n\r\n### The minimal reproduction\r\n\r\n(I will omit how I find out the root cause. If you are interested I can write down.)\r\n\r\nPlease see https://github.com/flutter/flutter/issues/113995 with minimal reproduction code\r\n\r\n### Why that causes bug\r\n\r\nThe first pumpWidget creates initial tree, and I deliberately set padding to non-zero, such that LeaderLayer.paint will see non-zero Offset, and thus will pushTransform.\r\n\r\nIn the second pumpWidget, I deliberately set padding to zero. Then, LeaderLayer.paint will *not* call pushTransform. Correct implementation should set engineLayer to null, but the old code just leave that variable unchanged.\r\n\r\nThen comes the third pumpWidget. I change the color inside a RepaintBoundary which is the sibling of LeaderLayer (CompositedTransformTarget). This is carefully constructed (notice the sibling and the RepaintBoundary) to reproduce the following behavior in real-world complicated app: We should (1) ensure `LeaderLayer. _addToSceneWithRetainedRendering` is called, and (2) ensure `LeaderLayer. _needsAddToScene = false`. For example, if we do not add that RepaintBoundary, it will not construct the case, because CompositedTransformTarget's RO will repaint and thus _needsAddToScene becomes true.\r\n\r\nThen, interesting thing happens. Look at the code:\r\n\r\n```dart\r\n  void _addToSceneWithRetainedRendering(ui.SceneBuilder builder) {\r\n    if (!_needsAddToScene && _engineLayer != null) {\r\n      builder.addRetained(_engineLayer!);\r\n      return;\r\n    }\r\n    ...\r\n```\r\n\r\nWe have constructed a case, such that the `if` is true. Notice that, if we fix the bug (just as what we do in the PR), the `engineLayer` will be null so if condition will not be true. Thus, buggy code will call `LeaderLayer.addRetained`, while correct code will not.\r\n\r\nThen the error happens. Notice that, this `LeaderLayer._engineLayer` indeed is the layer constructed in the second pumpWidget instead of the third (i.e. it is stale from last frame). Therefore, this EngineLayer's children are all from the stale previous frame. For example, the ClipRectLayer from previous frame (second pumpWidget). Since it has already been used as oldLayer in RenderClipRect, that old stale ClipRectLayer should never be used. However we are now using it in addRetained. Therefore, no wonder when `addRetained` is checking all subtree ensuring `_debugCheckNotUsedAsOldLayer`, it fails the assertions.\r\n\r\n### Why is the solution valid\r\n\r\nWith analysis above, we can clearly see this solves the bug. In addition, looking at ClipRectLayer etc, they also have such \"engineLayer = null\" logic, so even if only mimicking those we should do this.\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [x] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAeUeuM5M5Svx", "author": {"login": "flutter-dashboard"}, "authorAssociation": "NONE", "body": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).\n\nIf you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**\n\n__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.", "createdAt": "2022-10-25T07:08:33Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113998#issuecomment-1290087409"}, {"id": "IC_kwDOAeUeuM5NHaur", "author": {"login": "auto-submit"}, "authorAssociation": "NONE", "body": "auto label is removed for flutter/flutter, pr: 113998, due to - Please get at least one approved review if you are already a member or two member reviews if you are not a member before re-applying this label. __Reviewers__: If you left a comment approving, please use the \"approve\" review action instead.", "createdAt": "2022-10-27T16:35:08Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113998#issuecomment-1293790123"}, {"id": "IC_kwDOAeUeuM5NHavH", "author": {"login": "auto-submit"}, "authorAssociation": "NONE", "body": "auto label is removed for flutter/flutter, pr: 113998, due to Validations Fail.", "createdAt": "2022-10-27T16:35:09Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113998#issuecomment-1293790151"}], "createdAt": "2022-10-25T07:08:30Z", "title": "`Layer ... was previously used as oldLayer` assertion error in debug mode, and page being blank in release mode, caused by LeaderLayer addToScene bug"}}
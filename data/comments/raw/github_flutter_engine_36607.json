{"source": "github", "metadata": {"org": "flutter", "repo": "engine", "issue": 36607}, "content": {"author": {"login": "fzyzcjy"}, "body": "This PR tries to expose vsync information to the developer, so they can know when it is proper to call the more un-restricted `window.render` proposed in #36438.\r\n\r\nCurrently only the API is shown, because IMHO the implementation details is unrelated to thoughts about #36438, and the API (and therefore implementations) are subject to changes. I will continue working on it, once the API is approved.\r\n\r\nFor detailed design about this API and its implementation, please have a look at \"Get last vsync time information\" section of https://docs.google.com/document/d/1FuNcBvAPghUyjeqQCOYxSt6lGDAQ1YxsNlOvrUx0Gko/edit.\r\n\r\nSample usage:\r\n\r\n```dart\r\nfinal info = SchedulerBinding.instance.lastVsyncInfo();\r\n```\r\n\r\nList of work:\r\n\r\n- [x] code the (draft) Dart API\r\n- [ ] discuss whether the API is acceptable\r\n- [ ] implement the C++ part on SDK<=29 Android\r\n- [ ] implement the C++ part on new android, ios, and other platforms\r\n- [ ] create a wrapper function in `flutter/flutter` repo, probably in `SchedulerBinding`\r\n\r\n*List which issues are fixed by this PR. You must list at least one issue.*\r\n\r\n*If you had to change anything in the [flutter/tests] repo, include a link to the migration guide as per the [breaking change policy].*\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide] and the [C++, Objective-C, Java style guides].\r\n- [ ] I listed at least one issue that this PR fixes in the description above.\r\n- [ ] I added new tests to check the change I am making or feature I am adding, or Hixie said the PR is test-exempt. See [testing the engine] for instructions on\r\nwriting and running engine tests.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I signed the [CLA].\r\n- [ ] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[C++, Objective-C, Java style guides]: https://github.com/flutter/engine/blob/main/CONTRIBUTING.md#style\r\n[testing the engine]: https://github.com/flutter/flutter/wiki/Testing-the-engine\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAlZRSc5NITGt", "author": {"login": "dnfield"}, "authorAssociation": "MEMBER", "body": "I'm going to close this to remove it from review queues. As I'm mentioning in some other PRs, let's discuss further on discord.", "createdAt": "2022-10-27T20:20:30Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/36607#issuecomment-1294021037"}, {"id": "IC_kwDOAlZRSc5NJCu7", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "Thanks, I will discuss on discord about this", "createdAt": "2022-10-27T23:04:18Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/36607#issuecomment-1294216123"}, {"id": "IC_kwDOAlZRSc5NwCFq", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> It's not clear to me how this is any different from observing the Duration you get in onBeginFrame.\r\n\r\nIn flutter_smooth, one janky frame can be (e.g.) 100ms, and we need to submit window.render per vsync interval. When is the next vsync interval? This question is answered by this PR.\r\n\r\nIn other words, in the 100ms janky frame, onBeginFrame only provides first vsync target time, while we need to know the rest.\r\n\r\n> As I'm mentioning in some other PRs, let's discuss further on discord.\r\n\r\nSure, will discuss when you have time (guess you are on weekends so reply here firstly)", "createdAt": "2022-11-05T08:04:22Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/36607#issuecomment-1304437098"}], "createdAt": "2022-10-05T00:07:09Z", "title": "Expose `vsync` information to developer"}}
{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 113526}, "content": {"author": {"login": "fzyzcjy"}, "body": "Flutter [does say](https://api.flutter.dev/flutter/dart-ui/PlatformDispatcher/onReportTimings.html) the time cost is \"less than 0.1ms every 1 second to report the timings measured on iPhone6S\". However, not every mobile phone is as high-end as iPhone6S. For example, on my testing device (TRT-AL00, indeed not the lowest-end device!), I measured that it takes about 20-30ms per second. Then we have a problem. When having https://github.com/fzyzcjy/flutter_smooth, we know a big janky frame (say, takes 200ms) will never let user really feel janky, but instead user will see the app being 60FPS smooth. However, this is based on the assumption that misc work such as report timings should not block the UI thread for a continuous period of time - which is not true if report timings happens. After the 200ms janky frame, we see about 6ms of report timing. Among with other things such as dispatch touch events, they easily take up more than ~16ms and we get one jank. Then flutter_smooth is no longer smooth due to the jank.\r\n\r\nExcept for the case of flutter_smooth, IMHO this PR is also useful for normal Flutter users. It takes 2-3% of CPU time, which is not negligible and may be measured. In addition, this is not a critical feature. Surely, when this is disabled, the DevTool will not show the frame ui/rasterizer time at all. However, not everyone needs to read that timing data, since they may either do not open DevTool, or use the tracing timeline instead (which contains more than enough information to know the frame timing data). Therefore, it looks reasonable to at least give users a *chance* (i.e. a flag) to disable it.\r\n\r\nThe code is deliberately written by reading a const bool environment variable. Therefore, it has completely zero overhead. I have confirmed that by using compiler explorer before - https://discordapp.com/channels/608014603317936148/608021234516754444/1024141682377236500.\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [x] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAeUeuM5NDUvx", "author": {"login": "dnfield"}, "authorAssociation": "MEMBER", "body": "Without this, how do you measure frame timings in profile mode?", "createdAt": "2022-10-26T22:12:20Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1292717041"}, {"id": "IC_kwDOAeUeuM5NDiFF", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> @dnfield Without this, how do you measure frame timings in profile mode?\r\n\r\nI personally by the timeline data. You know, look at the GPURasterizer::Draw rectangle inside timeline, etc.\r\n\r\np.s. partially related https://github.com/flutter/devtools/issues/4522", "createdAt": "2022-10-26T23:28:54Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1292771653"}, {"id": "IC_kwDOAeUeuM5NDig1", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> @goderbauer I find adding this a bit dubios. The environment flag will be really hard to discover.\r\n\r\nHmm why are other env flags in flutter easy to discover, by adding doc or something else? I can do the same, then this is no problem.\r\n\r\n> Also, profile mode exists so you can get these kind of performance metrics out of your app.\r\n\r\nAs mentioned above, these perf metrics are *already exposed* via the timeline data, such as by looking at GPURasterizer::Draw. \r\n\r\n> If you don't want that, there's always release mode...\r\n\r\nBut we need to do profiling to get profile data, don't we :)\r\n", "createdAt": "2022-10-26T23:31:40Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1292773429"}, {"id": "IC_kwDOAeUeuM5NDitB", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "Rephrase the problem: We are providing redundant data (i.e. report timing, even if timeline tracing already has the data), and that redundancy is causing measurable speed drop compared with release mode. Then we are biasing the profiling result.\r\n\r\nSo, if this is not to be merged, maybe we should create another PR to the doc site, with something like: \"Please do not believe the speed in profile mode. It will be measureably slower than release mode.\" But IMHO users will not like that sentence.", "createdAt": "2022-10-26T23:32:50Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1292774209"}, {"id": "IC_kwDOAeUeuM5NDpI_", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "Look like I can remove the environment variable.\r\n\r\nIn Dart, if we have a normal variable that only has one constant value, then the field will be removed. https://github.com/dart-lang/sdk/issues/50287#issuecomment-1289027245 \"Also AOT compiler is capable of removing unused fields of various kinds (the field is also effectively unused if it always contains the same constant value or is only written into, but never read).\"\r\n\r\nThe experiment confirms this:\r\n\r\nhttps://godbolt.org/z/Thd91YcPj\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/198161917-503d91f2-47a2-4c71-8a89-9164f96f4c7c.png)\r\n\r\nI will update the code shortly.", "createdAt": "2022-10-27T00:15:59Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1292800575"}, {"id": "IC_kwDOAeUeuM5NHXIG", "author": {"login": "dnfield"}, "authorAssociation": "MEMBER", "body": "> > @dnfield Without this, how do you measure frame timings in profile mode?\r\n> \r\n> I personally by the timeline data. You know, look at the GPURasterizer::Draw rectangle inside timeline, etc.\r\n> \r\n> p.s. partially related [flutter/devtools#4522](https://github.com/flutter/devtools/issues/4522)\r\n\r\nThis method is significantly cheaper than the timeline.", "createdAt": "2022-10-27T16:22:20Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1293775366"}, {"id": "IC_kwDOAeUeuM5NJBvj", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> @dnfield This method is significantly cheaper than the timeline.\r\n\r\nI originally thought so. But interestingly, seems no in a few reasons:\r\n\r\n* timeline is usually there (or even cannot be disabled? not find a flag to disable), while report timings is an extra thing\r\n* timeline makes app slower evenly, while report timings is a big burst. thus, flutter_smooth can handle timline slowness very easily (and still gets 60fps and smooth user feeling), while report timings will cause a jank (because it itself takes some long time and during that time flutter_smooth cannot perform any job to submit extra frames).\r\n\r\n---\r\n\r\nFor disable tracing: Not see any flag to disable IMHO\r\n\r\n```\r\nflutter run --help | grep trace\r\n    --trace-startup                               Trace application startup, then exit, saving the trace to a file. By default, this will be saved in the \"build\" directory. If the FLUTTER_TEST_OUTPUTS_DIR environment variable is set, the file will be written there instead.\r\n    --endless-trace-buffer                        Enable tracing to an infinite buffer, instead of a ring buffer. This is useful when recording large traces. To use an endless buffer to record startup traces, combine this with \"--trace-startup\".\r\n    --trace-systrace                              Enable tracing to the system tracer. This is only useful on platforms where such a tracer is available (Android, iOS, macOS and Fuchsia).\r\n    --trace-skia                                  Enable tracing of Skia code. This is useful when debugging the raster thread (formerly known as the GPU thread). By default, Flutter will not log Skia code, as it introduces significant overhead that may affect recorded performance metrics in a misleading way.\r\n    --[no-]await-first-frame-when-tracing         Whether to wait for the first frame when tracing startup (\"--trace-startup\"), or just dump the trace as soon as the application is running. The first frame is detected by looking for a Timeline event with the name \"Rasterized first useful frame\". By default, the widgets library's binding takes care of sending this event.\r\n    --[no-]hot                                    Run with support for hot reloading. Only available for debug mode. Not available with \"--trace-startup\".\r\n```", "createdAt": "2022-10-27T22:57:45Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1294212067"}, {"id": "IC_kwDOAeUeuM5NJDda", "author": {"login": "dnfield"}, "authorAssociation": "MEMBER", "body": "It'd be really helpful if you could share some measurements (including device/platform/runtime mode).", "createdAt": "2022-10-27T23:09:34Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1294219098"}, {"id": "IC_kwDOAeUeuM5NJE5V", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "@dnfield Let me find an old screenshot from my past experiment (https://github.com/fzyzcjy/yplusplus/issues/6124#issuecomment-1272830057)\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/198415416-9f031194-2a32-431a-b4dd-48e26cffbc5b.png)\r\n![image](https://user-images.githubusercontent.com/5236035/198415425-17d13ad7-2857-4d23-aeed-7326719f6fad.png)\r\n![image](https://user-images.githubusercontent.com/5236035/198415432-c04f1b45-af6d-4e63-bef6-34bcb87e1f27.png)\r\n![image](https://user-images.githubusercontent.com/5236035/198415438-834760dd-79d7-42a8-bde5-ad3f1891bb78.png)\r\n\r\nafter fix\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/198415453-e5df85af-8711-4d4a-92ac-d593a55e2e6d.png)\r\n![image](https://user-images.githubusercontent.com/5236035/198415461-40f94d92-632a-44ac-bc8f-885b3c75e55c.png)\r\n", "createdAt": "2022-10-27T23:19:53Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1294224981"}, {"id": "IC_kwDOAeUeuM5OhU6i", "author": {"login": "dnfield"}, "authorAssociation": "MEMBER", "body": "You can use systracing instead of timeline by doing `--trace-systrace`. That is less expensive than timeline based tracing. \r\n\r\nUnfortunately, I'm having trouble from the images telling where the extra time is being spent. I'm also confused why the traces are looking at pointer data packet events when this bug is about frame timings. \r\n\r\nI think we should try to look at ways to make the frame timings measurements cheaper on representative hardware rather than disabling them. Timeline adds more overhead on every frame. Maybe you could file an issue with some of your findings?", "createdAt": "2022-11-16T17:04:42Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1317359266"}, {"id": "IC_kwDOAeUeuM5Oi8Ys", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> Unfortunately, I'm having trouble from the images telling where the extra time is being spent. I'm also confused why the traces are looking at pointer data packet events when this bug is about frame timings.\r\n\r\nAh sorry! I must paste the wrong image here - at the time I wrote the reply I may be thinking about my another PR about pointer events.\r\n\r\n> I think we should try to look at ways to make the frame timings measurements cheaper on representative hardware rather than disabling them. Timeline adds more overhead on every frame. Maybe you could file an issue with some of your findings?\r\n\r\nSure. I will do that soon (have no time now so possibly within a few days)", "createdAt": "2022-11-16T22:53:51Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1317783084"}, {"id": "IC_kwDOAeUeuM5O8Qxo", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "As discussed earlier in Discord, maybe I will focus on the main part of flutter_smooth now (quite busy recently), and restart this PR after the critical PRs of flutter_smooth has been merged.\r\n\r\n(For future readers of this thread: Recent progress of the critical PRs are not only in flutter repositories and discord, but also somewhere such as https://github.com/fzyzcjy/flutter_smooth/issues/173)", "createdAt": "2022-11-23T01:01:47Z", "includesCreatedEdit": true, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113526#issuecomment-1324420200"}], "createdAt": "2022-10-17T11:55:09Z", "title": "Allow disable report timing in profile build since it takes not-negligible amount of time"}}
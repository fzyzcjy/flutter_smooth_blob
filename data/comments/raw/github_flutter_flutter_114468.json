{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 114468}, "content": {"author": {"login": "fzyzcjy"}, "body": "(This is WIP, since I want to see whether this change will make regression test fail or not)\r\n\r\nConsider this simple example\r\n\r\n```dart\r\nimport 'package:flutter/scheduler.dart';\r\nimport 'package:flutter_test/flutter_test.dart';\r\n\r\nvoid main() {\r\n  testWidgets('addTearDown should work', (tester) async { // <-- THIS FAILS\r\n    timeDilation = 2;\r\n    addTearDown(() => timeDilation = 1);\r\n  });\r\n\r\n  testWidgets('directly reset should work', (tester) async { // <-- this is ok\r\n    timeDilation = 2;\r\n    timeDilation = 1;\r\n  });\r\n}\r\n```\r\n\r\nIt yields:\r\n\r\n<details>\r\n\r\n```shell\r\n/Volumes/MyExternal/ExternalRefCode/flutter/bin/flutter --no-color test --machine --start-paused test/a.dart\r\nTesting started at 09:50 ...\r\n\r\n\u2550\u2550\u2561 EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\r\nThe following assertion was thrown running a test:\r\nThe timeDilation was changed and not reset by the test.\r\n\r\nWhen the exception was thrown, this was the stack:\r\n#0      SchedulerBinding.debugAssertNoTimeDilation.<anonymous closure> (package:flutter/src/scheduler/binding.dart:662:9)\r\n#1      SchedulerBinding.debugAssertNoTimeDilation (package:flutter/src/scheduler/binding.dart:665:6)\r\n#2      TestWidgetsFlutterBinding._verifyInvariants (package:flutter_test/src/binding.dart:968:12)\r\n#3      AutomatedTestWidgetsFlutterBinding._verifyInvariants (package:flutter_test/src/binding.dart:1433:11)\r\n#4      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:952:7)\r\n<asynchronous suspension>\r\n\r\nThe test description was:\r\n  addTearDown should work\r\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\r\n\r\nTest failed. See exception logs above.\r\nThe test description was: addTearDown should work\r\n```\r\n\r\n</details>\r\n\r\nIn other words, we do not allow resetting configurations in `addTearDown` (or `tearDown`). Instead, we must do it at the end of the closure.\r\n\r\nIMHO resetting things in `addTearDown`/`tearDown` is a commonly seen practice. For example, `window.physicalSize` can be reset in a tear-down function, and even Flutter test code inside the framework does so a lot of times. A quick search also shows that, such as [this example](https://stackoverflow.com/questions/6854658/explain-the-setup-and-teardown-python-methods-used-in-test-cases), resetting in tear down holds even for other tests such as Python.\r\n\r\nBy disallowing so, Flutter devs may have a bit more friction when learning Flutter, since they may firstly write down code that follows common practice, realizing it does not work, and change it.\r\n\r\nIt is also inconsistent with other parts of the Flutter. As mentioned above, `window.physicalSize` can be reset in a tear-down function, but things like timeDilation cannot.\r\n\r\nThe PR can also make code a bit simpler. Originally, whenever writing setup code (e.g. `timeDilation=2`), we must put tear down code at the end of the function, and wrap with a try-finally. But with the PR, it can be put near the setup code, so it is a bit cleaner for code readers. By the way, this is also a bit like the \"defer\" keyword in go - something like `configure(); defer reset(); other_functions()` will let the reset be executed last.\r\n\r\nIn some cases, this seems to simplify code a lot. For example, in https://github.com/flutter/flutter/pull/113830#discussion_r1005887028, I have to introduce a weird timeDilation reset that seems to have no pairing timeDilation modification (and cause confusion of readers - even code reviewers). With this PR, the reset will be put to the next line of modification, so it is clear.\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [ ] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [], "createdAt": "2022-11-02T01:52:26Z", "title": "Fix error when resetting configurations in tear down phase"}}
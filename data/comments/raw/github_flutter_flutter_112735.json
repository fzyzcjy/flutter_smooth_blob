{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 112735}, "content": {"author": {"login": "fzyzcjy"}, "body": "[wait a minute when I write down comments...]\r\n\r\nThe original code comment says:\r\n\r\n> If we're the root of the render tree (probably a RenderView), then we have to paint ourselves, since nobody else can paint us. We don't add ourselves to _nodesNeedingPaint in this case, because the root is always told to paint regardless.\r\n\r\nHowever, IMHO it is wrong in two aspects.\r\n\r\n### Problem 1: RenderView does not come to this branch\r\n\r\nFirstly, for a `RenderView`, it will not go into this branch, but instead go into the first branch (the `if (isRepaintBoundary && _wasRepaintBoundary)`). This is because RenderView.isRepaintBoundary is defined to be true, which can be seen in the code.\r\n\r\nThe experiment also confirms this. Click to expand below:\r\n\r\n<details>\r\n\r\nAdd a few logs:\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/193377612-be3ab525-2819-401f-b68e-25c318e40dd8.png)\r\n\r\nCode:\r\n\r\n```\r\nimport 'package:flutter/foundation.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter/rendering.dart';\r\nimport 'package:flutter/scheduler.dart';\r\nimport 'package:flutter_test/flutter_test.dart';\r\n\r\nvoid main() {\r\n  testWidgets('hello', (tester) async {\r\n    debugPrintBeginFrameBanner = debugPrintEndFrameBanner = true;\r\n\r\n    final dummy = ValueNotifier(0);\r\n    await tester.pumpWidget(ValueListenableBuilder(\r\n      valueListenable: dummy,\r\n      builder: (_, dummy, __) => _DummyInner(dummy: dummy),\r\n    ));\r\n\r\n    dummy.value++;\r\n    await tester.pump();\r\n\r\n    debugPrintBeginFrameBanner = debugPrintEndFrameBanner = false;\r\n  });\r\n}\r\n\r\nclass _DummyInner extends SingleChildRenderObjectWidget {\r\n  final int dummy;\r\n\r\n  const _DummyInner({\r\n    super.key,\r\n    required this.dummy,\r\n    super.child,\r\n  });\r\n\r\n  @override\r\n  _RenderDummy createRenderObject(BuildContext context) =>\r\n      _RenderDummy(dummy: dummy);\r\n\r\n  @override\r\n  void updateRenderObject(BuildContext context, _RenderDummy renderObject) {\r\n    renderObject.dummy = dummy;\r\n  }\r\n}\r\n\r\nclass _RenderDummy extends RenderProxyBox {\r\n  _RenderDummy({\r\n    required int dummy,\r\n    RenderBox? child,\r\n  })  : _dummy = dummy,\r\n        super(child);\r\n\r\n  // not mark repaint yet\r\n  int get dummy => _dummy;\r\n  int _dummy;\r\n\r\n  set dummy(int value) {\r\n    if (_dummy == value) return;\r\n    _dummy = value;\r\n    print('hi ${describeIdentity(this)} set dummy thus markNeedsPaint START');\r\n    markNeedsPaint();\r\n    print('hi ${describeIdentity(this)} set dummy thus markNeedsPaint END');\r\n  }\r\n\r\n  @override\r\n  void paint(PaintingContext context, Offset offset) {\r\n    print('hi ${describeIdentity(this)}.paint SUPPOSE THIS IS THE REAL PAINT');\r\n    super.paint(context, offset);\r\n  }\r\n}\r\n```\r\n\r\noutput\r\n\r\n```\r\n/Volumes/MyExternal/ExternalRefCode/flutter/bin/flutter --no-color test --machine --start-paused --plain-name hello --local-engine-src-path=/Volumes/MyExternal/ExternalRefCode/engine/src --local-engine=host_debug_unopt test/hello.dart\r\nTesting started at 09:21 ...\r\n\r\nhi RenderParagraph#d9227.markNeedsPaint start _needsPaint=true\r\nhi RenderPositionedBox#d9bb5.markNeedsPaint start _needsPaint=true\r\nhi RenderView#fab3a.markNeedsPaint start _needsPaint=true\r\nhi flushPaint PipelineOwner#89028 node=RenderView#fab3a NEEDS-PAINT _needsPaint=true owner=PipelineOwner#89028 node._layerHandle.layer!.attached=true\r\nhi TransformLayer#64092.buildScene\r\nhi PictureLayer#149d1._addToSceneWithRetainedRendering _needsAddToScene=true\r\n\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 Frame 2                        0ms \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\r\nhi _RenderDummy#a17bc.markNeedsPaint start _needsPaint=true\r\nhi RenderView#fab3a.markNeedsPaint start _needsPaint=false\r\nhi RenderView#fab3a.markNeedsPaint case-repaintboundary owner=PipelineOwner#89028\r\nhi flushPaint PipelineOwner#89028 node=RenderView#fab3a NEEDS-PAINT _needsPaint=true owner=PipelineOwner#89028 node._layerHandle.layer!.attached=true\r\nhi _RenderDummy#a17bc.paint SUPPOSE THIS IS THE REAL PAINT\r\nhi TransformLayer#64092.buildScene\r\n\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\r\n\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 Frame 3                        0ms \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\r\nhi _RenderDummy#a17bc set dummy thus markNeedsPaint START\r\nhi _RenderDummy#a17bc.markNeedsPaint start _needsPaint=false\r\nhi _RenderDummy#a17bc.markNeedsPaint case-parent parent=RenderView#fab3a\r\nhi RenderView#fab3a.markNeedsPaint start _needsPaint=false\r\nhi RenderView#fab3a.markNeedsPaint case-repaintboundary owner=PipelineOwner#89028\r\nhi _RenderDummy#a17bc set dummy thus markNeedsPaint END\r\nhi flushPaint PipelineOwner#89028 node=RenderView#fab3a NEEDS-PAINT _needsPaint=true owner=PipelineOwner#89028 node._layerHandle.layer!.attached=true\r\nhi _RenderDummy#a17bc.paint SUPPOSE THIS IS THE REAL PAINT\r\nhi TransformLayer#64092.buildScene\r\n\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\r\nhi RenderParagraph#c63b7.markNeedsPaint start _needsPaint=true\r\nhi RenderPositionedBox#2fb99.markNeedsPaint start _needsPaint=true\r\nhi RenderView#fab3a.markNeedsPaint start _needsPaint=false\r\nhi RenderView#fab3a.markNeedsPaint case-repaintboundary owner=PipelineOwner#89028\r\nhi flushPaint PipelineOwner#89028 node=RenderView#fab3a NEEDS-PAINT _needsPaint=true owner=PipelineOwner#89028 node._layerHandle.layer!.attached=true\r\nhi TransformLayer#64092.buildScene\r\nhi PictureLayer#18f7f._addToSceneWithRetainedRendering _needsAddToScene=true\r\n```\r\n\r\n</details>\r\n\r\nBy looking at the experiment above, we see that, the `RenderView` goes to the `case-repaintboundary` which is the first branch, instead of the third branch, so the comments seem incorrect.\r\n\r\n### Problem 2: Root is not always told to paint indeed\r\n\r\nTheoretically, I do not find clues why \"root is always told to paint\" indeed. Experimentically, this is also confirmed as below.\r\n\r\nWe change the branching condition as follows, so RenderView is forced to go to the 3rd branch (the branch with comments), instead of the 1st branch.\r\n\r\n```diff\r\n-     if (isRepaintBoundary && _wasRepaintBoundary) {\r\n+     if (isRepaintBoundary && _wasRepaintBoundary && /*HACK!!!*/(this is! RenderView)) {\r\n```\r\n\r\nThen we run the test code same as above (only with a few more logging), and get:\r\n\r\n<details>\r\n\r\n```\r\n/Volumes/MyExternal/ExternalRefCode/flutter/bin/flutter --no-color test --machine --start-paused --plain-name hello --local-engine-src-path=/Volumes/MyExternal/ExternalRefCode/engine/src --local-engine=host_debug_unopt test/hello.dart\r\nTesting started at 09:25 ...\r\n\r\nhi RenderParagraph#c9872.markNeedsPaint start _needsPaint=true\r\nhi RenderPositionedBox#f6896.markNeedsPaint start _needsPaint=true\r\nhi RenderView#0fb85.markNeedsPaint start _needsPaint=true\r\nhi flushPaint PipelineOwner#ce901 node=RenderView#0fb85 NEEDS-PAINT _needsPaint=true owner=PipelineOwner#ce901 node._layerHandle.layer!.attached=true\r\nhi RenderView#0fb85.paint\r\nhi TransformLayer#d7668.buildScene\r\nhi PictureLayer#335b7._addToSceneWithRetainedRendering _needsAddToScene=true\r\n\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 Frame 2                        0ms \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\r\nhi _RenderDummy#3427b.markNeedsPaint start _needsPaint=true\r\nhi RenderView#0fb85.markNeedsPaint start _needsPaint=false\r\nhi RenderView#0fb85.markNeedsPaint case-else owner=PipelineOwner#ce901\r\nhi TransformLayer#d7668.buildScene\r\nhi PictureLayer#335b7._addToSceneWithRetainedRendering _needsAddToScene=false\r\n\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\r\n\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 Frame 3                        0ms \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\r\nhi _RenderDummy#3427b set dummy thus markNeedsPaint START\r\nhi _RenderDummy#3427b.markNeedsPaint start _needsPaint=true\r\nhi _RenderDummy#3427b set dummy thus markNeedsPaint END\r\nhi TransformLayer#d7668.buildScene\r\nhi PictureLayer#335b7._addToSceneWithRetainedRendering _needsAddToScene=false\r\n\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\r\nhi RenderParagraph#66d6b.markNeedsPaint start _needsPaint=true\r\nhi RenderPositionedBox#537a5.markNeedsPaint start _needsPaint=true\r\nhi RenderView#0fb85.markNeedsPaint start _needsPaint=true\r\nhi TransformLayer#d7668.buildScene\r\nhi PictureLayer#335b7._addToSceneWithRetainedRendering _needsAddToScene=false\r\n```\r\n\r\n</details>\r\n\r\nAs we can see, RenderView.paint and RenderDummy.paint is only called once, even though we clearly call `RenderDummy.markNeedsPaint`. That is indeed a bug, and at least shows that the code comment is wrong - root is not always told to paint.\r\n\r\n---\r\n\r\n*Replace this paragraph with a description of what this PR is changing or adding, and why. Consider including before/after screenshots.*\r\n\r\n*List which issues are fixed by this PR. You must list at least one issue.*\r\nclose #112736\r\n\r\n*If you had to change anything in the [flutter/tests] repo, include a link to the migration guide as per the [breaking change policy].*\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [x] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [], "createdAt": "2022-10-01T01:18:23Z", "title": "Fix logic error in `markNeedsPaint`"}}
{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 103486}, "content": {"author": {"login": "fzyzcjy"}, "body": "Please see https://github.com/flutter/flutter/issues/103487\r\n\r\nClose #103487\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [x] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAeUeuM5C-xq5", "author": {"login": "flutter-dashboard"}, "authorAssociation": "NONE", "body": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).\n\nIf you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**\n\n__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.", "createdAt": "2022-05-11T13:19:07Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1123752633"}, {"id": "IC_kwDOAeUeuM5C_Mwr", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "all tests passed.\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/167876802-4ae2c2e3-b936-49de-8a16-fbd53fff1bc4.png)\r\n\r\n", "createdAt": "2022-05-11T14:40:00Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1123863595"}, {"id": "IC_kwDOAeUeuM5DFVNs", "author": {"login": "goderbauer"}, "authorAssociation": "MEMBER", "body": "What's the use case for needing that? What can you test now that you weren't able to test before?", "createdAt": "2022-05-12T22:19:28Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1125471084"}, {"id": "IC_kwDOAeUeuM5DFbqx", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> What's the use case for needing that? What can you test now that you weren't able to test before?\r\n\r\nNot to test indeed, but to inform. Firstly, in https://github.com/fzyzcjy/flutter_convenient_test readme, there is a 1-minute video demonstrating how this open source lib looks like. Then you see this lib shows errors etc in the command panel in an intuitive way for the programmers. When talking about \"errors\", surely we want to show stack traces as well, but currently for errors like golden mismatch I have to use takeException and stacktrace is lost.\r\n\r\nWhere this lib needs it: https://github.com/fzyzcjy/flutter_convenient_test/blob/f9d38c9fd870a5dab5a61755f66214b29caadf2f/packages/convenient_test_dev/lib/src/functions/command.dart#L99", "createdAt": "2022-05-12T23:08:30Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1125497521"}, {"id": "IC_kwDOAeUeuM5DLqAd", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "\ud83d\udc40 ", "createdAt": "2022-05-16T01:42:29Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1127129117"}, {"id": "IC_kwDOAeUeuM5DvGDT", "author": {"login": "goderbauer"}, "authorAssociation": "MEMBER", "body": "It is a little odd to expose that here and may lead to confusion in the API. Have you considered just overwriting `FlutterError.onError` in your framework yourself to catch the error directly?", "createdAt": "2022-05-24T20:51:04Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1136419027"}, {"id": "IC_kwDOAeUeuM5Dveyf", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "Well I hope to reuse the logic about Flutter errors in testing...", "createdAt": "2022-05-24T23:12:42Z", "includesCreatedEdit": true, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1136520351"}, {"id": "IC_kwDOAeUeuM5E97eN", "author": {"login": "Piinks"}, "authorAssociation": "CONTRIBUTOR", "body": "(Triage) Hi @fzyzcjy, does @goderbauer's suggestion suit your needs? I do not know that we want to merge this given the previous comments.", "createdAt": "2022-06-16T00:00:33Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1157085069"}, {"id": "IC_kwDOAeUeuM5E99jE", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "@Piinks Hi that does not suit. Btw `FlutterError.onError` cannot be rewritten outside a `widgetTest` since widgetTest overrides it again.", "createdAt": "2022-06-16T00:15:08Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1157093572"}, {"id": "IC_kwDOAeUeuM5FB0MO", "author": {"login": "Piinks"}, "authorAssociation": "CONTRIBUTOR", "body": "> FlutterError.onError cannot be rewritten outside a widgetTest since widgetTest overrides it again\r\n\r\nI think that is by design. You can override it for the given test, or even use `setUp` to override it for a `group` of tests.", "createdAt": "2022-06-16T20:32:44Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1158103822"}, {"id": "IC_kwDOAeUeuM5FCXDC", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> even use setUp to override it for a group of tests.\r\n\r\nThat seems not possible, surprisingly. Because FlutterError.onError is overrided in `TestWidgetsFlutterBinding._runTest`, which seems to be run after all setup?", "createdAt": "2022-06-16T23:10:49Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1158246594"}, {"id": "IC_kwDOAeUeuM5FW_s4", "author": {"login": "Piinks"}, "authorAssociation": "CONTRIBUTOR", "body": "Oh right. That is true! It looks like we usually set this in the given test.", "createdAt": "2022-06-22T22:04:37Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1163655992"}, {"id": "IC_kwDOAeUeuM5FX5rC", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "Yes, so it is not very convenient as we cannot do it in setup", "createdAt": "2022-06-23T03:48:03Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1163893442"}, {"id": "IC_kwDOAeUeuM5FxVhq", "author": {"login": "goderbauer"}, "authorAssociation": "MEMBER", "body": "We need to come up with another solution for this that doesn't require adding confusing API. This will need some more thinking. I suggest you describe what you want to achieve in an issue without proposing a concrete solution just yet.", "createdAt": "2022-06-29T22:34:44Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [{"content": "EYES", "users": {"totalCount": 1}}], "url": "https://github.com/flutter/flutter/pull/103486#issuecomment-1170561130"}], "createdAt": "2022-05-11T13:19:05Z", "title": "Create `takeExceptionDetails` which is similar to `takeException` but allows the user to know details (e.g. stack trace)"}}
{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 112436}, "content": {"author": {"login": "fzyzcjy"}, "body": "This PR is a part for implementing the 60fps smooth rendering (#101227).\r\n\r\nSome discussions can be seen in Discord, such as around https://discordapp.com/channels/608014603317936148/608021234516754444/1024141682377236500.\r\n\r\n*List which issues are fixed by this PR. You must list at least one issue.*\r\nhttps://github.com/flutter/flutter/issues/101227\r\n\r\n*If you had to change anything in the [flutter/tests] repo, include a link to the migration guide as per the [breaking change policy].*\r\n\r\nP.S. Not sure what naming do you like, so just put a very long (temporary) variable name here :)\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [x] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAeUeuM5LMdI7", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "Thanks, I did discussed with Hixie on discord and wrongly thought that public discussion was enough. I will fill all those contents in a few hours.", "createdAt": "2022-09-28T23:10:08Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/112436#issuecomment-1261556283"}, {"id": "IC_kwDOAeUeuM5LMgDx", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "@dnfield \r\n\r\n**What is the big picture that it fixes?**\r\n\r\nThe ultimate goal is, let the app run smoothly at 60FPS, even if it has heavy subtree that is very slow to build/layout. In other words, the design doc: https://docs.google.com/document/d/1FuNcBvAPghUyjeqQCOYxSt6lGDAQ1YxsNlOvrUx0Gko\r\n\r\nIt already has a working demo. See the (new) \"experiments\" chapter, with a video, screenshots, full code, brief code, benchmark, analysis.\r\n\r\n**What's the main goal you're trying to achieve with this particular change?**\r\n\r\nIn order to solve that big goal, we must let animation callbacks run at 60FPS even if the whole tree is very slow to build/layout. Otherwise, even if we refresh a subtree by 60FPS, anything like CircularProgressIndicator, FooTransition, or manual AnimationController will all never be smooth, because they do not see new timestamp at 60FPS.\r\n\r\nThen, to fire (extra) animation callbacks, a natural solution is to work with the `Ticker`s. Originally, `Ticker`s are fired once per frame. But now, we also extra fire it (with proper timestamp) in each 60FPS smooth extra frame.\r\n\r\nLastly, to fire extra events to `Ticker`s , we must know the existence of Tickers in the auxiliary widget subtree (no need for Tickers in the main subtree since they should not be fired at 60FPS). That is why I added a callback when Tickers are created - then I can record it such that to fire extra ticks.\r\n\r\n**Why is it doing it this way?**\r\n\r\nWhy it is a compile time flag `FLUTTER_ENABLE_TICKER_PROVIDER_STATE_MIXIN_CREATOR`: Because Hixie is worried about performance loss (in Discord hackers-framework). Making it a compile time flag, then nobody will have any even tiny bit of performance loss, if they do not need this feature.\r\n\r\nWhy there is `debugOverrideEnableTickerProviderStateMixinTickerCreator` in addition to compile time flag: Because Hixie said compile time flags are hard to test. By using this `debugOverride...` flag we can test it easily (indeed I have written tests there).\r\n\r\nWhy a context must be passed to the callback: Because as mentioned above, I need to determine whether it is in the second subtree or main subtree.\r\n\r\nBtw the name is temporary, just suggest any name you like :)\r\n\r\n**Why can't we used existing mechanisms to achieve the same thing?**\r\n\r\nWell, Hixie and I have tried, but cannot come up with a solution :/ Feel free to suggest solutions! Microscopic speaking, seems that cannot know a Ticker in a TickerProviderMixin is created so cannot gather them. Macroscopic speaking, did not find other ways to let it be smooth.\r\n\r\n**Why do we need this mechanism to achieve the larger goal of having incremental/progressive layout?**\r\n\r\nHope this question is clear with above ;)", "createdAt": "2022-09-28T23:28:24Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/112436#issuecomment-1261568241"}], "createdAt": "2022-09-27T03:32:04Z", "title": "Exposing hook about tickers with zero overhead"}}
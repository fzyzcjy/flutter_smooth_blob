{"source": "github", "metadata": {"org": "flutter", "repo": "engine", "issue": 36826}, "content": {"author": {"login": "fzyzcjy"}, "body": "1. I will finish code details, refine code, add tests, make tests pass, etc, after a code review that thinks the *rough idea* is acceptable. It is because, from my past experience, reviews may request changing a lot. If the general idea is to be changed, all detailed implementation efforts are wasted :)\r\n2. The PR has an already-working counterpart, and it produces ~60FPS smooth experimental results. The benchmark results and detailed analysis is in chapter https://cjycode.com/flutter_smooth/benchmark/. All the source code is in  https://github.com/fzyzcjy/engine/tree/flutter-smooth and https://github.com/fzyzcjy/flutter/tree/flutter-smooth.\r\n3. Possibly useful as a context to this PR, there is a whole chapter discussing the internals - how flutter_smooth is implemented. (Link: https://cjycode.com/flutter_smooth/design/)\r\n\r\n---\r\n\r\n\r\n#### Benefits for Flutter (without considering flutter_smooth)\r\n\r\nMultiple pointer data packets often arrive in one vsync interval. Currently, each of them requires a PostTask, C++-to-Dart-call, etc. However, when there is already one *pending* PostTask and a second data packet arrives, we can optimize it - no need to schedule a second PostTask and C++-to-Dart call, but instead utilize the pending PostTask and submit more data inside one call.\r\n\r\nHow much speed up does it give: Consider the following screenshot (It happens after a long janky frame, but serves pretty well for us to compute numbers because it contains a lot of items - the average measure error will be much smaller). As we can see,\r\n\r\n* total wall time: ~8.2ms\r\n* total Dart time (measured by the `_handlePointerDataPacket` time, which is the 4th purple row. I made an extra Timeline event to measure that): ~3.2ms\r\n\r\nTherefore, if we merge multiple into one, we can get roughly 2x speed up, because it removes those idle periods between them, as well as some of the big overhead between Engine::DispatchPointerDataPacket and the real Dart code execution.\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/196432743-3e1c59b0-29d8-4139-9134-25e361785515.png)\r\n![image](https://user-images.githubusercontent.com/5236035/196433392-c76ed644-4df1-4d5d-82ab-4eea9ed3a0ed.png)\r\n\r\nConcrete cases when this happens:\r\n\r\n1. When it janks, this PR helps speed up. For example, many Android devices provide two data packets per vsync interval. So suppose somehow the UI thread took 30ms to compute a frame, then this approach will merge 3-4 packet deliver into one.\r\n2. In some devices, speedup due to this PR happens in each and every time. For example, below is a tracing on a test phone. As you can see, it delivers 4 pointer data packets per frame. Consider what will happen when UI thread needs (e.g.) 15ms to compute (unlike what is in the screenshot which is very lightweight workload indeed). Then, the first 3 out of 4 packets will be able to be merged by this PR.\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/196432383-79921b20-791e-4b51-b3a7-14e671bfea41.png)\r\n\r\n\r\n#### Benefits for flutter_smooth\r\n\r\nThe analysis is similar to above. However, since there are a lot of big janky frames in flutter_smooth, it is common to see a dozen of pointer event dispatching after that long janky frame. Therefore, this PR makes that part much much faster.\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide] and the [C++, Objective-C, Java style guides].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I added new tests to check the change I am making or feature I am adding, or Hixie said the PR is test-exempt. See [testing the engine] for instructions on\r\nwriting and running engine tests.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [x] I signed the [CLA].\r\n- [ ] All existing and new tests are passing. --- *Note: I will fix CI later after hearing some review feedbacks, because after review feedback the code itself may change a lot, so I do not want to waste time to fix to-be-thrown code :)*\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[C++, Objective-C, Java style guides]: https://github.com/flutter/engine/blob/main/CONTRIBUTING.md#style\r\n[testing the engine]: https://github.com/flutter/flutter/wiki/Testing-the-engine\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAlZRSc5NIia_", "author": {"login": "dnfield"}, "authorAssociation": "MEMBER", "body": "I started to review this, but then realized this seems to be at odds with some similar work that was done for iOS - see `pointer_data_dispatcher.h` and in particular the `SmoothPointerDataDispatcher`.\r\n\r\nI think you're on to something here, but I wonder if we should be looking at making the SmoothPointerDataDispatcher work on more than just iOS at this point (as in, perhaps some Android phones are now doing what iOS was doing w.r.t. pointer events and screen vsync being different). This approach does not currently seem to be compatible with that, and I have some concerns about thread safety around it (you're capturing `this` and posting it to a different task runner in an unsafe manner).\r\n\r\nI would suggest filing a specific bug for this issue with more details about which platform(s) you're observing this behavior on and how what you need is different from the SmoothPointerDataDispatcher (if it's different at all). If you're on Android, it would probably be worth doing an experiment where the smooth dispatcher is enabled there.", "createdAt": "2022-10-27T21:29:25Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/36826#issuecomment-1294083775"}, {"id": "IC_kwDOAlZRSc5NJDbL", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> but then realized this seems to be at odds with some similar work that was done for iOS - see pointer_data_dispatcher.h and in particular the SmoothPointerDataDispatcher.\r\n\r\nLooking at https://github.com/flutter/engine/blob/6368dee0d78f4345e6cfdc4541754acb0891d845/shell/common/pointer_data_dispatcher.h#L157, seems that SmoothPointerDataDispatcher is just delaying *one* packet. On the other hand, this PR tries to *merge* multiple packets into one bigger packet, so we do not pay extra cost of PostTask, call Dart, etc.\r\n\r\n> then realized this seems to be at odds with some similar work that was done for iOS - see pointer_data_dispatcher.h and in particular the SmoothPointerDataDispatcher.\r\n\r\nThat one seems to be queueing \r\n\r\n> (you're capturing this and posting it to a different task runner in an unsafe manner).\r\n\r\nThis is just minor details and I will fix them definitely\r\n\r\n> I would suggest filing a specific bug for this issue with more details about which platform(s) you're observing this behavior on and how what you need is different from the SmoothPointerDataDispatcher (if it's different at all). If you're on Android, it would probably be worth doing an experiment where the smooth dispatcher is enabled there.\r\n\r\nThanks I will do that", "createdAt": "2022-10-27T23:09:17Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/36826#issuecomment-1294218955"}, {"id": "IC_kwDOAlZRSc5Nv8yU", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "> ...I would suggest filing a specific bug \r\n\r\ndone: https://github.com/flutter/flutter/issues/114738", "createdAt": "2022-11-05T05:47:02Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/36826#issuecomment-1304415380"}], "createdAt": "2022-10-18T02:52:56Z", "title": "Speed up pointer data packet dispatching by roughly 2x when multiple packets come"}}
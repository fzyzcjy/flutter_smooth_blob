{"source": "github", "metadata": {"org": "flutter", "repo": "engine", "issue": 37341}, "content": {"author": {"login": "fzyzcjy"}, "body": "Previous: https://github.com/flutter/engine/pull/36911\r\n\r\n(Since the previous one is already closed and I have no permission to reopen, I guess I should create a new issue such that it can be put in the review queue)\r\n\r\nAs @dnfield points out in https://github.com/flutter/engine/pull/36911#issuecomment-1294089965:\r\n\r\n> we need some motivating benchmarks that clearly show what benefits would be gained here, and we need to see that changes to this won't negatively impact existing benchmarks/users.\r\n\r\nThus, reproduction is shown in the section below. As for existing benchmarks, could you please give some hints? I guess I have no permission to execute skia perf as it seems only run on master or other flutter branches. Thus, maybe I can do nothing except for creating a PR and see skia perf after it is merged...\r\n\r\n## Reproduction\r\n\r\n### Setup and analysis\r\n\r\nIn the benchmark, I deliberately make a dead loop to mimic the case when ui thread runs for smaller than but very close to 16.67ms. This is quite hacky and may not work on your device, so please modify the hardcoded time in the code if you cannot reproduce it. But hopefully this is ok as a \"motivating\" benchmark you mentioned :)\r\n\r\nI also realize this seems hard to reproduce if the await vsync is called per 16ms. Instead, when I make ui thread deliberately janky (e.g. ~100ms), so that await vsync is not called for ~100ms, this is reproduced. Not sure why, but anyway regardless of why this happens, the PR can solve it.\r\n\r\nIn the screenshots below, I add red vertical lines manually by mimicking the `VSYNC` interval (this is the correct interval that I have fixed previously, so can use it). As we can see, the AwaitVsync is called *before* the vsync (which is imaginary and not shown in figure), but we miss it for a whole 16.67ms.\r\n\r\n### Data\r\n\r\nCode: https://github.com/fzyzcjy/flutter/tree/feat/await-vsync-directly-call + standard engine build (because this is reproduction not bugfix)\r\nRun it: `/path/to/flutter drive --profile -t test_driver/run_app.dart --driver test_driver/near_full_tim_perf_test.dart`\r\n\r\nSample result timeline json: \r\n[near_full_time_perf.timeline.json.zip](https://github.com/fzyzcjy/flutter_smooth/files/9942874/near_full_time_perf.timeline.json.zip)\r\n\r\nSample screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/200097914-a449aeaa-37da-4766-9e8c-deb7d808a907.png)\r\n![image](https://user-images.githubusercontent.com/5236035/200097947-28bfd75c-362a-4dab-a4d8-7f0d2936b16f.png)\r\n", "comments": [{"id": "IC_kwDOAlZRSc5Nv8Zx", "author": {"login": "flutter-dashboard"}, "authorAssociation": "NONE", "body": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).\n\nIf you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**\n\n__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.", "createdAt": "2022-11-05T05:39:01Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/engine/pull/37341#issuecomment-1304413809"}], "createdAt": "2022-11-05T05:38:58Z", "title": "Fix janks caused by await vsync in classical Flutter (V2)"}}
{"source": "github", "metadata": {"org": "flutter", "repo": "flutter", "issue": 113927}, "content": {"author": {"login": "fzyzcjy"}, "body": "Close #113940\r\n\r\n## Theoretical analysis\r\n\r\nConsider the following example code. Code with \"case A\" occupies 2.5GB memory, while \"case B\" is 4.0GB memory.\r\n\r\n<details>\r\n\r\n```dart\r\nclass C {\r\n  int? a;\r\n  int? b;\r\n\r\n  // int get computed => a.hashCode; // case A\r\n  int get computed => a.hashCode ^ b.hashCode; // case B\r\n}\r\n\r\nFuture<void> main() async {\r\n  final arr = <C>[];\r\n  for (var i = 0; i < 100000000; ++i) {\r\n    arr.add(C()\r\n      ..a = 42\r\n      ..b = 100);\r\n  }\r\n  print('hash=${Object.hashAll(arr.map((e) => e.computed))}');\r\n\r\n  print('sleep...');\r\n  await Future<void>.delayed(const Duration(seconds: 10000));\r\n}\r\n```\r\n\r\n</details>\r\n\r\nTherefore, we know that, a field does not occupy memory if there is no read/write to it. For example, the field `b` in case A is never read, so Dart compiler seems so smart that it knows it can be eliminated and no memory is allocated for that. By the way, `b` is *written* even in case A, but seems memory is not allocated as long as it is not read. This agrees with common sense (but since I am not compiler expert, feel free to correct me if I am wrong!).\r\n\r\nFor fields inside Flutter that is merely used for debug, they are usually accessed inside an `assert(() { ... }());` block. That is great, because if *each and every* field access are inside `assert`, those code will be eliminated in release build, and by discussions above, we will not pay memory for those *debug* fields.\r\n\r\nHowever, `AnimationController.debugLabel` does not seem to follow this. Inside `AnimationController.toStringDetails`, it uses `debugLabel` field *without* being inside a `assert` block. Therefore, IMHO, we will be paying the memory of debugLabel even if we never use that in runtime.\r\n\r\nAs for why `toStringDetails` is guaranteed to be called, it is simple: `Animation.toString` calls that `toStringDetails`, and we know `toString` will not be tree shaken out.\r\n\r\n## Experimental analysis\r\n\r\n### Setup\r\n\r\nUse these code:\r\n\r\n<details>\r\n\r\nNeed to add two dummy fields to AnimationController, such that it crosses the double-word alignment. (Yes, this PR does not affect memory for *today*'s AnimationController, but who can guarantee it never have two more fields or two less fields, which this PR will reduce 16 bytes).\r\n\r\n```dart\r\nclass AnimationController {\r\n  int? dummy1;\r\n  int? dummy2;\r\n... old code ...\r\n}\r\n```\r\n\r\nUse this code\r\n\r\n```dart\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter/scheduler.dart';\r\n\r\nvoid main() => runApp(const MyApp());\r\n\r\nclass MyApp extends StatefulWidget {\r\n  const MyApp({Key? key}) : super(key: key);\r\n\r\n  @override\r\n  State<MyApp> createState() => _MyAppState();\r\n}\r\n\r\nclass _MyAppState extends State<MyApp> {\r\n  final arr = <AnimationController>[];\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    for (var i = 0; i < 2000000; ++i) arr.add(AnimationController(vsync: const TestVSync()));\r\n    print('${arr.first.dummy1} ${arr.first.dummy2}'); // ensure the dummy fields are not removed\r\n    arr.first\r\n      ..duration = const Duration(seconds: 1)\r\n      ..forward();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) => Container();\r\n}\r\n\r\nclass TestVSync implements TickerProvider {\r\n  const TestVSync();\r\n\r\n  @override\r\n  Ticker createTicker(TickerCallback onTick) => Ticker(onTick);\r\n}\r\n```\r\n\r\n</details>\r\n\r\n### Operations\r\n\r\n1. `flutter build apk --extra-gen-snapshot-options='--print-object-layout-to=object_layout.json'` and look at json to know memory layout\r\n2. `flutter run --profile` to know memory consumption at runtime\r\n\r\n### Results\r\n\r\n#### Without PR\r\n\r\n96 bytes per object\r\n\r\n<details>\r\n\r\n```\r\n  {\r\n    \"class\": \"AnimationController\",\r\n    \"size\": 96,\r\n    \"fields\": [\r\n      {\r\n        \"field\": \"dummy1\",\r\n        \"offset\": 20\r\n      },\r\n      {\r\n        \"field\": \"dummy2\",\r\n        \"offset\": 24\r\n      },\r\n      {\r\n        \"field\": \"lowerBound\",\r\n        \"offset\": 28\r\n      },\r\n      {\r\n        \"field\": \"upperBound\",\r\n        \"offset\": 36\r\n      },\r\n      {\r\n        \"field\": \"debugLabel\",\r\n        \"offset\": 44\r\n      },\r\n      {\r\n        \"field\": \"animationBehavior\",\r\n        \"offset\": 48\r\n      },\r\n      {\r\n        \"field\": \"duration\",\r\n        \"offset\": 52\r\n      },\r\n      {\r\n        \"field\": \"reverseDuration\",\r\n        \"offset\": 56\r\n      },\r\n      {\r\n        \"field\": \"_ticker\",\r\n        \"offset\": 60\r\n      },\r\n      {\r\n        \"field\": \"_simulation\",\r\n        \"offset\": 64\r\n      },\r\n      {\r\n        \"field\": \"_value\",\r\n        \"offset\": 68\r\n      },\r\n      {\r\n        \"field\": \"_direction\",\r\n        \"offset\": 72\r\n      },\r\n      {\r\n        \"field\": \"_status\",\r\n        \"offset\": 76\r\n      },\r\n      {\r\n        \"field\": \"_lastReportedStatus\",\r\n        \"offset\": 80\r\n      }\r\n    ]\r\n  },\r\n```\r\n\r\n</details>\r\n\r\nand\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/197549017-4166f28a-812c-42b4-b90d-e3b5258ca998.png)\r\n\r\n#### With this PR\r\n\r\n80 bytes per object\r\n\r\n<details>\r\n\r\n```\r\n  {\r\n    \"class\": \"AnimationController\",\r\n    \"size\": 80,\r\n    \"fields\": [\r\n      {\r\n        \"field\": \"dummy1\",\r\n        \"offset\": 20\r\n      },\r\n      {\r\n        \"field\": \"dummy2\",\r\n        \"offset\": 24\r\n      },\r\n      {\r\n        \"field\": \"lowerBound\",\r\n        \"offset\": 28\r\n      },\r\n      {\r\n        \"field\": \"upperBound\",\r\n        \"offset\": 36\r\n      },\r\n      {\r\n        \"field\": \"animationBehavior\",\r\n        \"offset\": 44\r\n      },\r\n      {\r\n        \"field\": \"duration\",\r\n        \"offset\": 48\r\n      },\r\n      {\r\n        \"field\": \"reverseDuration\",\r\n        \"offset\": 52\r\n      },\r\n      {\r\n        \"field\": \"_ticker\",\r\n        \"offset\": 56\r\n      },\r\n      {\r\n        \"field\": \"_simulation\",\r\n        \"offset\": 60\r\n      },\r\n      {\r\n        \"field\": \"_value\",\r\n        \"offset\": 64\r\n      },\r\n      {\r\n        \"field\": \"_direction\",\r\n        \"offset\": 68\r\n      },\r\n      {\r\n        \"field\": \"_status\",\r\n        \"offset\": 72\r\n      },\r\n      {\r\n        \"field\": \"_lastReportedStatus\",\r\n        \"offset\": 76\r\n      }\r\n    ]\r\n  },\r\n```\r\n\r\n</details>\r\n\r\nand\r\n\r\n![image](https://user-images.githubusercontent.com/5236035/197549096-2c9847c9-b17a-41df-9906-2b5ae1c9e798.png)\r\n\r\n\r\n### Conclusion\r\n\r\n16B reduce per object.\r\n\r\n#### Without PR\r\n\r\n\r\n\r\n## Pre-launch Checklist\r\n\r\n- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.\r\n- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.\r\n- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].\r\n- [x] I signed the [CLA].\r\n- [x] I listed at least one issue that this PR fixes in the description above.\r\n- [x] I updated/added relevant documentation (doc comments with `///`).\r\n- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].\r\n- [ ] All existing and new tests are passing.\r\n\r\nIf you need help, consider asking for advice on the #hackers-new channel on [Discord].\r\n\r\n<!-- Links -->\r\n[Contributor Guide]: https://github.com/flutter/flutter/wiki/Tree-hygiene#overview\r\n[Tree Hygiene]: https://github.com/flutter/flutter/wiki/Tree-hygiene\r\n[test-exempt]: https://github.com/flutter/flutter/wiki/Tree-hygiene#tests\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[Features we expect every widget to implement]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#features-we-expect-every-widget-to-implement\r\n[CLA]: https://cla.developers.google.com/\r\n[flutter/tests]: https://github.com/flutter/tests\r\n[breaking change policy]: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes\r\n[Discord]: https://github.com/flutter/flutter/wiki/Chat\r\n", "comments": [{"id": "IC_kwDOAeUeuM5MzPOj", "author": {"login": "flutter-dashboard"}, "authorAssociation": "NONE", "body": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need [an exemption](https://github.com/flutter/flutter/wiki/Tree-hygiene#tests) to this rule, contact Hixie on the #hackers channel in [Chat](https://github.com/flutter/flutter/wiki/Chat) (don't just cc him here, he won't see it! *He's on Discord!*).\n\nIf you are not sure if you need tests, consider this rule of thumb: the purpose of a test is to make sure someone doesn't accidentally revert the fix. Ask yourself, **is there anything in your PR that you feel it is important we not accidentally revert back to how it was before your fix?**\n\n__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.", "createdAt": "2022-10-24T06:49:06Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1288500131"}, {"id": "IC_kwDOAeUeuM5MzZ8z", "author": {"login": "flutter-dashboard"}, "authorAssociation": "NONE", "body": "This pull request has been changed to a draft. The currently pending flutter-gold status will not be able to resolve until a new commit is pushed or the change is marked ready for review again.\n\nFor more guidance, visit [Writing a golden file test for `package:flutter`](https://github.com/flutter/flutter/wiki/Writing-a-golden-file-test-for-package:flutter).\n\n__Reviewers__: Read the [Tree Hygiene page](https://github.com/flutter/flutter/wiki/Tree-hygiene#how-to-review-code) and make sure this patch meets those guidelines before LGTMing.\n\n", "createdAt": "2022-10-24T07:31:03Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1288544051"}, {"id": "IC_kwDOAeUeuM5M2yF8", "author": {"login": "jonahwilliams"}, "authorAssociation": "MEMBER", "body": "You'll need either a test or a test exception.", "createdAt": "2022-10-24T18:31:27Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1289429372"}, {"id": "IC_kwDOAeUeuM5M4DQr", "author": {"login": "fzyzcjy"}, "authorAssociation": "CONTRIBUTOR", "body": "@jonahwilliams Thanks, sent https://discord.com/channels/608014603317936148/608018585025118217/1034242780857376799", "createdAt": "2022-10-24T23:12:09Z", "includesCreatedEdit": true, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1289761835"}, {"id": "IC_kwDOAeUeuM5M4EVQ", "author": {"login": "Hixie"}, "authorAssociation": "MEMBER", "body": "test-exemption: optimization", "createdAt": "2022-10-24T23:15:36Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [{"content": "HOORAY", "users": {"totalCount": 3}}], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1289766224"}, {"id": "IC_kwDOAeUeuM5M4Iij", "author": {"login": "auto-submit"}, "authorAssociation": "NONE", "body": "auto label is removed for flutter/flutter, pr: 113927, due to - Please get at least one approved review if you are already a member or two member reviews if you are not a member before re-applying this label. __Reviewers__: If you left a comment approving, please use the \"approve\" review action instead.", "createdAt": "2022-10-24T23:39:30Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1289783459"}, {"id": "IC_kwDOAeUeuM5M4Iiz", "author": {"login": "auto-submit"}, "authorAssociation": "NONE", "body": "auto label is removed for flutter/flutter, pr: 113927, due to Validations Fail.", "createdAt": "2022-10-24T23:39:31Z", "includesCreatedEdit": false, "isMinimized": false, "minimizedReason": "", "reactionGroups": [], "url": "https://github.com/flutter/flutter/pull/113927#issuecomment-1289783475"}], "createdAt": "2022-10-24T06:49:03Z", "title": "Fix wasted memory caused by debug fields - 16 bytes per object (when adding that should-be-removed field crosses double-word alignment)"}}